---

- name: Runner directories
  become: true
  block:
    - name: Create runner log directory
      file:
        path: /var/log/gitlab-runner
        state: directory
        owner: root
        group: admin
        mode: 'u=rwx,g=rx,o='

    - name: Create runner conf directories
      file:
        path: /etc/{{ item }}
        state: directory
        owner: root
        group: admin
        mode: 'u=rwx,g=rx,o='
      loop:
        - gitlab-runner
        - gitlab-runner/registration

    - name: Create runner work directories
      file:
        path: /var/{{ item }}
        state: directory
        owner: root
        group: admin
        mode: 'u=rwx,g=rx,o='
      loop:
        - gitlab-runner
        - gitlab-runner/work
        - gitlab-runner/vms

- name: Install runner software
  become: true
  block:
    - name: Check if runner is already installed
      stat:
        path: /usr/local/bin/gitlab-runner
      register: gitlab_runner

    - name: Call runner version
      command:
        cmd: /usr/local/bin/gitlab-runner --version
      when: gitlab_runner.stat.exists
      register: current_runner_version_reg
      changed_when: false

    - name: Determine current runner version 1 / 2
      set_fact:
        current_runner_version: "{{ current_runner_version_reg.stdout | default('') | regex_search('Version:[\\s]+([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
      when: gitlab_runner.stat.exists

    - name: Determine current runner version 2 / 2
      set_fact:
        current_runner_version: "{{ current_runner_version | default('') }}"

    - name: Determine whether we need to (re-)install the runner
      set_fact:
        need_runner_install: "{{ not gitlab_runner.stat.exists or (gitlab_runner_version != (current_runner_version | default(''))) }}"

    - name: Install runner {{ gitlab_runner_version }}
      get_url:
        url: https://gitlab-runner-downloads.s3.amazonaws.com/v{{ gitlab_runner_version }}/binaries/gitlab-runner-darwin-amd64
        dest: /usr/local/bin/gitlab-runner
        checksum: "sha256:{{ gitlab_runner_hash }}"
        owner: root
        group: admin
        mode: 'u=rwx,g=rx,o=rx'
      when: need_runner_install
